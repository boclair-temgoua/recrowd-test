import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../../../styles/Home.module.css'
import Link from 'next/link';
import NavBar from '../components/NavBar';
import { useRouter } from 'next/router';
import { useQuery, useQueryClient } from '@tanstack/react-query';
import { useState, useEffect } from 'react';
import { useDebounce } from '../../utils/useDebounce';
import { getInvestments } from './api';
import queryString from 'query-string';
import { InvestmentTableList } from './hooks/InvestmentTableList';
import { OneInvestmentResponse } from './core/_models';
import { PaginationItem } from '../../utils/forms/PaginationItem';

const Investment: NextPage = () => {
  const queryClient = useQueryClient()
  const [pageItem, setPageItem] = useState(1)
  const router = useRouter();
  const [filter, setFilter] = useState<string>('')

  const debouncedFilter = useDebounce(filter, 500);
  const isEnabled = Boolean(debouncedFilter)
  const fetchData = async (pageItem = 1, debouncedFilter: string) => await
    getInvestments({
      sort: 'DESC',
      q: debouncedFilter,
      limit: 20,
      page: Number(pageItem || 1)
    })
  const {
    isLoading,
    isError,
    data,
    isPreviousData,
  } = useQuery(['investments', debouncedFilter], () => fetchData(1, debouncedFilter), {
    enabled: filter ? isEnabled : !isEnabled,
    keepPreviousData: true,
    staleTime: 5000
  })


  const paginate = (pageItem: number) => { setPageItem(pageItem) }

  const dataTable = isLoading ? (<tr><td><strong>Loading...</strong></td></tr>) :
    isError ? (<tr><td><strong>Error find data please try again...</strong></td></tr>) :
      (data?.data?.count <= 0) ? ('Not data') :
        (
          data?.data?.data?.map((item: OneInvestmentResponse, index: number) => (
            <InvestmentTableList investmentItem={item} key={index} />
          )))

  return (
    <>
      <Head>
        <title>Investment | {process.env.NEXT_PUBLIC_NAME}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container py-3">
        <header>
          <NavBar />


          <div className="pricing-header p-3 pb-md-4 mx-auto text-center">
            <h1 className="display-4 fw-normal">Investment</h1>
            <p className="fs-5 text-muted">All Investment list</p>
            <button type="button" onClick={() => router.push({ pathname: "/investments/create", })} className="btn btn-primary ">Create new</button>
          </div>
        </header>

        <main>


          <div className="table-responsive">

            <table className="table text-center">
              <thead>
                <tr>
                  <th >Title</th>
                  <th >Scadenza1</th>
                  <th>Scadenza</th>
                  <th >Action</th>
                </tr>
              </thead>
              <tbody>
                {dataTable}
              </tbody>
            </table>

          </div>
        </main>
      </div>
    </>
  )
}

export default Investment
